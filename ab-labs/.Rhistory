library(tidyverse)
library(babynames)
babynames %>%
filter(name == "Logan")
babynames %>%
filter(name == "Logan") %>%
group_by(year) %>%
summarize(total = sum(prop)) %>%
arrange(desc(total)) %>%
head(1) %>%
select(year)
most_popular_year <- function(name_arg) {
babynames %>%
filter(name == name_arg) %>%
group_by(year) %>%
summarize(total = sum(prop)) %>%
arrange(desc(total)) %>%
head(1) %>%
select(year)
}
most_popular_year("Olivia")
most_popular_year("Regina")
most_popular_year("Rami")
most_popular_year("Mahershala")
formals(most_popular_year)
most_popular_year()
most_popular_year_with_default <- function(name_arg = "Logan") {
babynames %>%
filter(name == name_arg) %>%
group_by(year) %>%
summarize(total = sum(prop)) %>%
arrange(desc(total)) %>%
head(1) %>%
select(year)
}
most_popular_year_with_default()
most_popular_year_with_default(name_arg = "Jordan")
detach("package:babynames", unload = TRUE)
# should throw an error
most_popular_year("Jordan")
library(babynames)
most_popular_year_v2 <- function(data, name_arg) {
data %>%
filter(name == name_arg) %>%
group_by(year) %>%
summarize(total = sum(prop)) %>%
arrange(desc(total)) %>%
head(1) %>%
select(year)
}
# will throw error because we didn't specify "data"
most_popular_year_v2(name_arg = "Logan")
# works
most_popular_year_v2(data = babynames, name_arg = "Logan")
babynames %>%
filter(sex == "F") %>%
most_popular_year_v2(name_arg = "Logan")
babynames %>%
filter(sex == "M") %>%
most_popular_year_v2(name_arg = "Logan")
babynames %>%
filter(sex == "F") %>%
most_popular_year_v2(name_arg = "Ellis")
babynames %>%
filter(sex == "M") %>%
most_popular_year_v2(name_arg = "Ellis")
babynames %>%
filter(sex == "F") %>%
most_popular_year_v2(name_arg = "Ab")
babynames %>%
filter(sex == "M") %>%
most_popular_year_v2(name_arg = "Ab")
babynames %>%
filter(sex == "F") %>%
most_popular_year_v2(name_arg = "Scout")
babynames %>%
filter(sex == "M") %>%
most_popular_year_v2(name_arg = "Scout")
most_popular_year_v2(babynames, "Morganne")
most_popular_year_v2("Morganne", babynames)
most_popular_year_v2("Morganne", data = babynames)
most_popular_year <- function(name_arg) {
babynames %>%
filter(name == name_arg) %>%
group_by(year) %>%
summarize(total = sum(prop)) %>%
arrange(desc(total)) %>%
head(1) %>%
select(year)
}
most_popular_year(name_arg = "Larry")
most_popular_year(name_arg = "Moe")
most_popular_year(name_arg = "Curly")
abs_family <- c("Jordan", "Kaden", "Kylee", "Felix")
map(abs_family, most_popular_year)
map_df(abs_family, most_popular_year)
top10 <- function(data) {
data %>%
group_by(name) %>%
summarize(births = sum(n)) %>%
arrange(desc(births)) %>%
head(10)
}
top10(data = babynames)
top_by_decade <- babynames %>%
mutate(decade = 10 * floor(year / 10)) %>%
group_split(decade) %>%
map_df(top10, .id = "decade")
View(top_by_decade)
top_by_decade <- babynames %>%
mutate(decade = 10 * floor(year / 10)) %>%
group_by(decade) %>%
group_map(~top10(.))
View(top_by_decade)
top_by_decade <- babynames %>%
mutate(decade = 10 * floor(year / 10)) %>%
group_by(decade) %>%
group_modify(~top10(.))
View(top_by_decade)
nrow(top_by_decade)
library(nycflights13)
most_common_dest <- function(c = "DL") {
flights %>%
filter(carrier == c) %>%
group_by(dest) %>%
summarise(nflights = n()) %>%
top_n(5, nflights) %>%
arrange(nflights)
}
most_common_dest()
most_common_dest("AA")
top_carriers <- function(airport = "MCO") {
flights %>%
filter(dest == airport) %>%
group_by(carrier) %>%
summarise(nflights = n(),
avg_arr_delay = mean(arr_delay, na.rm = TRUE),
sd = sd(arr_delay, na.rm = TRUE)) %>%
mutate(lower.ci = avg_arr_delay - qt(1 - (0.05 / 2), nflights - 1) * sd / sqrt(nflights),
upper.ci = avg_arr_delay + qt(1 - (0.05 / 2), nflights - 1) * sd / sqrt(nflights)) %>%
mutate(ci = paste("[", lower.ci, ",", upper.ci, "]")) %>%
select(-sd, -lower.ci, -upper.ci) %>%
top_n(5, nflights)
}
top_carriers()
library(ggplot2)
housing <- read.csv("https://jcrouser.github.io/MassMutual-DataVis/datasets/landdata-states.csv",
header = T)
glimpse(housing)
housing <- read.csv("https://amosca01.github.io/SSEP-22/data/landdata-states.csv",
header = T)
glimpse(housing)
?ggplot2
hp2013Q1 <- housing %>% filter(Date == 2013.25)
ggplot(hp2013Q1,
aes(y = Structure.Cost,
x = Land.Value)) +
geom_point()
p1 <- ggplot(hp2013Q1,
aes(x = Land.Value,      # x and y will have this mapping for all geoms
y = Structure.Cost)) # unless we explicitly override them
p1 + geom_point(aes(color = Home.Value)) +
geom_smooth(method = "lm")
p1 +
geom_point(aes(color = Home.Value)) +
geom_smooth()
p1 +
geom_point(aes(color = Home.Value)) +
geom_smooth(se = FALSE)
p1 +
geom_point(aes(color = Home.Value)) +
geom_text(aes(label = State), size = 3)
p1 +
geom_point(aes(size = 2),     # not quite right! 2 is not a variable, but rather a fixed value
color = "red")
hp2013Q1 <- housing %>% filter(Date == 2013.25)
ggplot(hp2013Q1,
aes(x = Land.Value,
y = Structure.Cost)) +
geom_point()
p1 <- ggplot(hp2013Q1,
aes(x = Land.Value,
y = Structure.Cost))
p1
p1 <- ggplot(hp2013Q1,
aes(x = Land.Value,
y = Structure.Cost)) +
geom_point()
p1
p1 + geom_point(aes(color = Home.Value)) +
geom_smooth(method = "lm")
p1 + geom_point(aes(color = Home.Value))
p1 +
geom_point(aes(color = Home.Value)) +
geom_smooth(se = FALSE)
p1 +
geom_point(aes(color = Home.Value)) +
geom_smooth()
p1 +
geom_point(aes(color = Home.Value)) +
geom_text(aes(label = State), size = 3)
p1 +
geom_point(aes(color = region,
shape = region),
size = 5)
p1 +
geom_point(aes(color = Home.Value))
p3 <- ggplot(housing,
aes(x = State,
y = Home.Price.Index))
p4 <- p3 + geom_point(aes(color = Date),
alpha = 0.5,
size = 1.5,
position = position_jitter(width = 0.25, height = 0))
p4
p3 <- ggplot(housing,
aes(x = State,
y = Home.Price.Index))
p4 <- p3 + geom_point(aes(color = Date),
alpha = 0.5,
size = 1.5,
position = position_jitter(width = 0.25, height = 0))
p4
p4 <- p4 +
scale_y_discrete(name = "State Abbreviation")
p4
p3 <- ggplot(housing,
aes(x = State,
y = Home.Price.Index))
p4 <- p3 + geom_point(aes(color = Date),
alpha = 0.5,
size = 1.5,
position = position_jitter(width = 0.25, height = 0))
p4
p4 <- p4 +
scale_x_discrete(name = "State Abbreviation")
p4
p4 +
scale_color_continuous(name = "",
breaks = c(1975.25, 1994.25, 2013.25),
labels = c(1971, 1994, 2013))
p4 <- p4 +
scale_color_continuous(name = "",
breaks = c(1975.25, 1994.25, 2013.25),
labels = c(1971, 1994, 2013),
low = "blue", high = "red")
p4
p4 +
scale_color_gradient2(name = "",
breaks = c(1975.25, 1994.25, 2013.25),
labels = c(1971, 1994, 2013),
low = "blue",
high = "red",
mid = "gray60",
midpoint = 1994.25)
p5 <- ggplot(housing, aes(x = Date,
y = Home.Value))
p5 + geom_line(aes(color = State))
p5 + geom_line() +
facet_wrap(~State, ncol = 10)
housing_byyear <- aggregate(cbind(Home.Value, Land.Value) ~ Date, data = housing, mean)
ggplot(housing_byyear, aes(x=Date)) +
geom_line(aes(y = Home.Value), color="red") +
geom_line(aes(y = Land.Value), color="blue")
library(tidyr)
home_land_byyear <- pivot_longer(housing_byyear,
values_to = "value",
names_to = "type",
cols = c("Home.Value", "Land.Value"))
ggplot(home_land_byyear,
aes(x = Date,
y = value,
color = type)) +
geom_line()
knitr::opts_chunk$set(eval = FALSE)
library(dplyr)
library(ggplot2)
library(ggplot2)
housing <- read.csv("https://amosca01.github.io/SSEP-22/data/landdata-states.csv",
header = T)
glimpse(housing)
?ggplot2
hp2013Q1 <- housing %>% filter(Date == 2013.25)
ggplot(hp2013Q1,
aes(x = Land.Value,
y = Structure.Cost)) +
geom_point()
p1 <- ggplot(hp2013Q1,
aes(x = Land.Value,
y = Structure.Cost)) +
geom_point()
p1
p1 +
geom_point(aes(color = Home.Value))
p1 +
geom_smooth(method = "lm")
p1 +
geom_point(aes(color = Home.Value)) +
geom_smooth() # If we don't specify the method, what happens?
# Check the docs for more details (?geom_smooth)
p1 +
geom_point(aes(color = Home.Value)) +
geom_smooth(se = FALSE)
p1 +
geom_point(aes(color = Home.Value)) +
geom_text(aes(label = State), size = 3)
p1 +
geom_point(aes(size = 2),     # not quite right! 2 is not a variable, but rather a fixed value
color = "red") # this is fine -- turns all points red
p1 +
geom_point(aes(color = region,
shape = region),
size = 5)
# Tweak the color scale!
p1 +
geom_point(aes(color = Home.Value))
p3 <- ggplot(housing,
aes(x = State,
y = Home.Price.Index))
p4 <- p3 + geom_point(aes(color = Date),
alpha = 0.5,
size = 1.5,
position = position_jitter(width = 0.25, height = 0))
p4
knitr::opts_chunk$set(eval = TRUE, message = FALSE)
head(ToothGrowth)
summary(ToothGrowth)
head(ToothGrowth)
library(dplyr)
ToothGrowth <- ToothGrowth %>%
mutate(dose = factor(dose))
library(tidyverse)
glimpse(ToothGrowth)
summary(ToothGrowth)
ToothGrowth <- ToothGrowth %>%
mutate(dose = factor(dose))
summary(ToothGrowth)
my_plot <- ggplot(ToothGrowth,
aes(x = dose,
y = len,
fill = dose)) +
geom_boxplot()
my_plot
my_plot +
scale_fill_manual(values = c("#004f71", "#465a01", "#981d97"))
library(RColorBrewer)
display.brewer.all()
myPlot +
scale_fill_brewer(palette = "Set3")
my_plot +
scale_fill_brewer(palette = "Set3")
my_plot +
scale_fill_brewer(palette = "Dark2")
install.packages("nasaweather")
library(nasaweather)
my_storms <- storms %>%
filter(year == 1995)
ggplot(my_storms,
aes(x = long,
y = lat,
color = wind)) +
geom_point() +
facet_wrap(~name)
library(ggthemes)
my_plot +
theme_economist() +
scale_fill_economist()
