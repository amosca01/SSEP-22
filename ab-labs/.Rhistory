library(babynames)
install(babynames)
install.packages("babynames")
library(babynames)
head(babynames)
?babynames
babynames %>%
select(year, name, n) %>%
head()
library(tidyverse)
babynames %>%
select(year, name, n) %>%
head()
# Replace 'Jordan' with your own name if you like!
babynames %>%
filter(name == "Jordan") %>%
head()
# Replace 'Jordan' with your own name if you like!
babynames %>%
filter(name == "Ab") %>%
head()
# Replace 'Ab' with your own name if you like!
babynames %>%
filter(name == "Jordan") %>%
head()
# Replace 'Ab' with your own name if you like!
babynames %>%
filter(name == "Ab") %>%
head()
ab <- babynames %>%
filter(name == "Ab") %>%
select(year, name, sex, n)
dim(ab)
head(ab)
class(ab)
# Load ggplot
library(ggplot2)
# Create a ggplot object where:
#   - the data is contained in the 'ab' object
#   - the 'year' column is mapped to the x-axis
#   - the 'n' column is mapped to the y-axis
ggplot(data = ab, aes(x = year, y = n)) + #<- the '+' operator means we're adding to this plot
# represent the data as a line chart,
# break the data up by 'sex' and give each group its own color
geom_line(aes(color = sex))
View(ab)
babynames <- babynames %>%
mutate(popular = prop > 0.01)
babynames <- babynames %>%
rename(is_popular = popular)
popular <- babynames %>%
filter(is_popular)
nrow(popular)
head(popular)
popular %>%
arrange(desc(prop))
ab %>%
summarize(max_abs = max(n))
ab %>%
arrange(desc(n))
ab %>%
filter(n == max(n))
ab %>%
summarize(num_rows = n(), max_abs = max(n))
knitr::opts_chunk$set(eval = FALSE)
library(tidyverse)
library(babynames)
head(babynames)
?babynames
babynames %>%
select(year, name, n) %>%
head()
# Replace 'Ab' with your own name if you like!
babynames %>%
filter(name == "Ab") %>%
head()
ab <- babynames %>%
filter(name == "Ab") %>%
select(year, name, sex, n)
dim(ab)
head(ab)
class(ab)
# Load ggplot
library(ggplot2)
# Create a ggplot object where:
#   - the data is contained in the 'ab' object
#   - the 'year' column is mapped to the x-axis
#   - the 'n' column is mapped to the y-axis
ggplot(data = ab, aes(x = year, y = n)) + #<- the '+' operator means we're adding to this plot
# represent the data as a line chart,
# break the data up by 'sex' and give each group its own color
geom_line(aes(color = sex))
babynames <- babynames %>%
mutate(popular = prop > 0.01)
babynames <- babynames %>%
rename(is_popular = popular)
popular <- babynames %>%
filter(is_popular)
nrow(popular) # count number of rows
head(popular)
popular %>%
arrange(desc(prop))
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(aesc(n))
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(asc(n))
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_post_pop_yr <- esa %<%
select(year)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_post_pop_yr <- esa %>%
select(year)
View(esa_post_pop_yr)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_post_pop_yr <- esa %>%
select(year) %>%
top_n(1)
View(esa_post_pop_yr)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_most_pop_yr <- esa %>%
select(year) %>%
top_n(1)
# YOUR SOLUTION HERE
most_pop_esa_yr <- babynames %>%
filter(year == esa_most_pop_yr) %>%
sort(prop)
# YOUR SOLUTION HERE
most_pop_esa_yr <- babynames %>%
filter(year == esa_most_pop_yr) %>%
select(year, name, sex, prop, n) %>%
arrange(prop)
head(most_pop_esa_yr)
View(esa_most_pop_yr)
View(most_pop_esa_yr)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_most_pop_yr <- esa %>%
select(year) %>%
pull(1)
View(most_pop_esa_yr)
View(esa)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_most_pop_yr <- esa %>%
select(year)
View(esa_most_pop_yr)
knitr::opts_chunk$set(eval = FALSE)
library(tidyverse)
library(babynames)
head(babynames)
?babynames
babynames %>%
select(year, name, n) %>%
head()
# Replace 'Ab' with your own name if you like!
babynames %>%
filter(name == "Ab") %>%
head()
ab <- babynames %>%
filter(name == "Ab") %>%
select(year, name, sex, n)
dim(ab)
head(ab)
class(ab)
# Load ggplot
library(ggplot2)
# Create a ggplot object where:
#   - the data is contained in the 'ab' object
#   - the 'year' column is mapped to the x-axis
#   - the 'n' column is mapped to the y-axis
ggplot(data = ab, aes(x = year, y = n)) + #<- the '+' operator means we're adding to this plot
# represent the data as a line chart,
# break the data up by 'sex' and give each group its own color
geom_line(aes(color = sex))
babynames <- babynames %>%
mutate(popular = prop > 0.01)
babynames <- babynames %>%
rename(is_popular = popular)
popular <- babynames %>%
filter(is_popular)
nrow(popular) # count number of rows
head(popular)
popular %>%
arrange(desc(prop))
# YOUR SOLUTION HERE
# Prop is the proportion (percentage) of bibies with that name in a given year
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_most_pop_yrs <- esa %>%
select(year)
View(esa_most_pop_yrs)
View(esa)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(desc(n))
head(esa)
esa_most_pop_yrs <- esa %>%
select(year)
View(esa)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(desc(n))
head(esa)
esa_most_pop_yr <- 2016
# YOUR SOLUTION HERE
most_pop_esa_yr <- babynames %>%
filter(year == esa_most_pop_yr) %>%
select(year, name, sex, prop, n) %>%
arrange(desc(prop))
head(most_pop_esa_yr)
arrange(select(filter(babynames, name == "Ab"), -name), desc(prop))
task <- babynames %>%
filter(name == "Ab") %>%
select(-name) %>%
arrange(desc(prop))
arrange(select(filter(babynames, name == "Ab"), -name), desc(prop))
task <- babynames %>%
filter(name == "Ab") %>%
select(-name) %>%
arrange(desc(prop))
task
