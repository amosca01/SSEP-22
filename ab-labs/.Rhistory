library(babynames)
install(babynames)
install.packages("babynames")
library(babynames)
head(babynames)
?babynames
babynames %>%
select(year, name, n) %>%
head()
library(tidyverse)
babynames %>%
select(year, name, n) %>%
head()
# Replace 'Jordan' with your own name if you like!
babynames %>%
filter(name == "Jordan") %>%
head()
# Replace 'Jordan' with your own name if you like!
babynames %>%
filter(name == "Ab") %>%
head()
# Replace 'Ab' with your own name if you like!
babynames %>%
filter(name == "Jordan") %>%
head()
# Replace 'Ab' with your own name if you like!
babynames %>%
filter(name == "Ab") %>%
head()
ab <- babynames %>%
filter(name == "Ab") %>%
select(year, name, sex, n)
dim(ab)
head(ab)
class(ab)
# Load ggplot
library(ggplot2)
# Create a ggplot object where:
#   - the data is contained in the 'ab' object
#   - the 'year' column is mapped to the x-axis
#   - the 'n' column is mapped to the y-axis
ggplot(data = ab, aes(x = year, y = n)) + #<- the '+' operator means we're adding to this plot
# represent the data as a line chart,
# break the data up by 'sex' and give each group its own color
geom_line(aes(color = sex))
View(ab)
babynames <- babynames %>%
mutate(popular = prop > 0.01)
babynames <- babynames %>%
rename(is_popular = popular)
popular <- babynames %>%
filter(is_popular)
nrow(popular)
head(popular)
popular %>%
arrange(desc(prop))
ab %>%
summarize(max_abs = max(n))
ab %>%
arrange(desc(n))
ab %>%
filter(n == max(n))
ab %>%
summarize(num_rows = n(), max_abs = max(n))
knitr::opts_chunk$set(eval = FALSE)
library(tidyverse)
library(babynames)
head(babynames)
?babynames
babynames %>%
select(year, name, n) %>%
head()
# Replace 'Ab' with your own name if you like!
babynames %>%
filter(name == "Ab") %>%
head()
ab <- babynames %>%
filter(name == "Ab") %>%
select(year, name, sex, n)
dim(ab)
head(ab)
class(ab)
# Load ggplot
library(ggplot2)
# Create a ggplot object where:
#   - the data is contained in the 'ab' object
#   - the 'year' column is mapped to the x-axis
#   - the 'n' column is mapped to the y-axis
ggplot(data = ab, aes(x = year, y = n)) + #<- the '+' operator means we're adding to this plot
# represent the data as a line chart,
# break the data up by 'sex' and give each group its own color
geom_line(aes(color = sex))
babynames <- babynames %>%
mutate(popular = prop > 0.01)
babynames <- babynames %>%
rename(is_popular = popular)
popular <- babynames %>%
filter(is_popular)
nrow(popular) # count number of rows
head(popular)
popular %>%
arrange(desc(prop))
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(aesc(n))
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(asc(n))
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_post_pop_yr <- esa %<%
select(year)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_post_pop_yr <- esa %>%
select(year)
View(esa_post_pop_yr)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_post_pop_yr <- esa %>%
select(year) %>%
top_n(1)
View(esa_post_pop_yr)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_most_pop_yr <- esa %>%
select(year) %>%
top_n(1)
# YOUR SOLUTION HERE
most_pop_esa_yr <- babynames %>%
filter(year == esa_most_pop_yr) %>%
sort(prop)
# YOUR SOLUTION HERE
most_pop_esa_yr <- babynames %>%
filter(year == esa_most_pop_yr) %>%
select(year, name, sex, prop, n) %>%
arrange(prop)
head(most_pop_esa_yr)
View(esa_most_pop_yr)
View(most_pop_esa_yr)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_most_pop_yr <- esa %>%
select(year) %>%
pull(1)
View(most_pop_esa_yr)
View(esa)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_most_pop_yr <- esa %>%
select(year)
View(esa_most_pop_yr)
knitr::opts_chunk$set(eval = FALSE)
library(tidyverse)
library(babynames)
head(babynames)
?babynames
babynames %>%
select(year, name, n) %>%
head()
# Replace 'Ab' with your own name if you like!
babynames %>%
filter(name == "Ab") %>%
head()
ab <- babynames %>%
filter(name == "Ab") %>%
select(year, name, sex, n)
dim(ab)
head(ab)
class(ab)
# Load ggplot
library(ggplot2)
# Create a ggplot object where:
#   - the data is contained in the 'ab' object
#   - the 'year' column is mapped to the x-axis
#   - the 'n' column is mapped to the y-axis
ggplot(data = ab, aes(x = year, y = n)) + #<- the '+' operator means we're adding to this plot
# represent the data as a line chart,
# break the data up by 'sex' and give each group its own color
geom_line(aes(color = sex))
babynames <- babynames %>%
mutate(popular = prop > 0.01)
babynames <- babynames %>%
rename(is_popular = popular)
popular <- babynames %>%
filter(is_popular)
nrow(popular) # count number of rows
head(popular)
popular %>%
arrange(desc(prop))
# YOUR SOLUTION HERE
# Prop is the proportion (percentage) of bibies with that name in a given year
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(n)
head(esa)
esa_most_pop_yrs <- esa %>%
select(year)
View(esa_most_pop_yrs)
View(esa)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(desc(n))
head(esa)
esa_most_pop_yrs <- esa %>%
select(year)
View(esa)
# YOUR SOLUTION HERE
esa <- babynames %>%
filter(name == "Esa") %>%
select(year, name, sex, n) %>%
arrange(desc(n))
head(esa)
esa_most_pop_yr <- 2016
# YOUR SOLUTION HERE
most_pop_esa_yr <- babynames %>%
filter(year == esa_most_pop_yr) %>%
select(year, name, sex, prop, n) %>%
arrange(desc(prop))
head(most_pop_esa_yr)
arrange(select(filter(babynames, name == "Ab"), -name), desc(prop))
task <- babynames %>%
filter(name == "Ab") %>%
select(-name) %>%
arrange(desc(prop))
arrange(select(filter(babynames, name == "Ab"), -name), desc(prop))
task <- babynames %>%
filter(name == "Ab") %>%
select(-name) %>%
arrange(desc(prop))
task
library(tidyverse)
library(babynames)
babynames %>%
filter(name == "Ab")
babynames %>%
filter(name == "Ab") %>%
group_by(year)
babynames %>%
filter(name == "Ellis")
babynames %>%
filter(name == "Ellis") %>%
group_by(year)
babynames %>%
filter(name == "Ellis") %>%
group_by(year)
babynames %>%
filter(name == "Ellis") %>%
group_by(year) %>%
summarize(N = n(),
ratio = sum(ifelse(sex == "F", n, 0)) /
sum(ifelse(sex == "M", n, 0)),
howfaroff = abs(1 - ratio)) %>%
filter(N == 2)  %>% # Filter to years where there were M and F babies with name
arrange(howfaroff)
babynames %>%
group_by(year) %>%
summarize(num_births = sum(n)) %>%
arrange(desc(num_births))
babynames %>%
group_by(name) %>%
summarize(earliest = min(year), latest = max(year))
babynames %>%
group_by(name) %>%
summarize(num_appearances = n()) %>%
filter(num_appearances == 276)
babynames %>%
mutate(is_popular = prop >= 0.01) %>%
filter(is_popular == TRUE) %>%
group_by(name) %>%
summarize(earliest = min(year)) %>%
arrange(desc(earliest))
babynames %>%
filter(year >= 1990 & year < 2000) %>%
group_by(name) %>%
summarize(num_births = sum(n)) %>%
arrange(desc(num_births))
library("nycflights13")
install.packages("nycflights13")
library("nycflights13")
head(nycflights13)
head(nycflights13)
library(nycflights13)
head(nycflights13)
head(flights)
flights
View(flights)
flights %>%
group_by(origin & month & day)
flights %>%
group_by(origin)
flights %>%
group_by(origin) %>%
group_by(month) %>%
group_by(day)
flights %>%
group_by(origin) %>%
group_by(month) %>%
group_by(day) %>%
summarize(num_flight = n())
flights %>%
group_by(origin, month, day) %>%
summarize(num_flight = n())
flights %>%
group_by(origin, month, day) %>%
summarize(avg_flight = mean())
flights %>%
group_by(origin, month, day) %>%
summarize(num_flight = n()) %>%
group_by(origin) %>%
summarize(avg_flights = mean(num_flight))
flights %>%
group_by(carrier) %>%
summarize(total_num_flights = n(),
avg_dept_delay = mean(dep_delay),
num_unique_dest = n(dest),
num_unique_planes = n(tailnum))
flights %>%
group_by(carrier) %>%
summarize(total_num_flights = n(),
avg_dept_delay = mean(dep_delay),
num_unique_dest = n_distinct(dest),
num_unique_planes = n_distinct(tailnum))
flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dept_delay))
flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dep_delay))
delays <- flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dep_delay))
delays <- flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dep_delay)) %>%
mutate(date = month + day)
delays
delays <- flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dep_delay)) %>%
mutate(date = month(month) + day)
delays <- flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dep_delay)) %>%
mutate(date = months(month) + day)
delays
delays <- flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dep_delay)) %>%
mutate(date = month.name(month) + day)
delays <- flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dep_delay)) %>%
mutate(date = month.abb(month) + day)
delays <- flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dep_delay)) %>%
mutate(date = month.abb(month))
delays <- flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dep_delay))
delays
library(lubridate)
install.packages("lubridate")
delays <- flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dep_delay))
knitr::opts_chunk$set(eval = FALSE)
library(tidyverse)
library(babynames)
babynames %>%
filter(name == "Ellis")
babynames %>%
filter(name == "Ellis") %>%
group_by(year)
babynames %>%
filter(name == "Ellis") %>%
group_by(year) %>%
summarize(N = n(),
ratio = sum(ifelse(sex == "F", n, 0)) /
sum(ifelse(sex == "M", n, 0)))
babynames %>%
filter(name == "Ellis") %>%
group_by(year) %>%
summarize(N = n(),
ratio = sum(ifelse(sex == "F", n, 0)) /
sum(ifelse(sex == "M", n, 0)),
howfaroff = abs(1 - ratio)) %>%
filter(N == 2)  %>% # Filter to years where there were M and F babies with name
arrange(howfaroff)
babynames %>%
group_by(year) %>%
summarize(num_births = sum(n)) %>%
arrange(desc(num_births))
babynames %>%
group_by(name) %>%
summarize(earliest = min(year), latest = max(year))
babynames %>%
group_by(name) %>%
summarize(num_appearances = n()) %>%
filter(num_appearances == 276)
babynames %>%
mutate(is_popular = prop >= 0.01) %>%
filter(is_popular == TRUE) %>%
group_by(name) %>%
summarize(earliest = min(year)) %>%
arrange(desc(earliest))
babynames %>%
filter(year >= 1990 & year < 2000) %>%
group_by(name) %>%
summarize(num_births = sum(n)) %>%
arrange(desc(num_births))
library(nycflights13)
library(lubridate)
flights
flights %>%
group_by(origin, month, day) %>%
summarize(num_flight = n()) %>%
group_by(origin) %>%
summarize(avg_flights = mean(num_flight))
flights %>%
group_by(carrier) %>%
summarize(total_num_flights = n(),
avg_dept_delay = mean(dep_delay),
num_unique_dest = n_distinct(dest),
num_unique_planes = n_distinct(tailnum))
delays <- flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dep_delay))
delays
delays <- flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dep_delay)) %>%
mutate(date = paste(month, "-", day))
delays
delays <- flights %>%
group_by(origin, month, day) %>%
summarize(avg_delay = mean(dep_delay)) %>%
mutate(date = paste0(month, "-", day))
delays
ggplot2(delays, aes(x = date, y = avg_delay, group = origin),
geom_point)
ggplot(delays, aes(x = date, y = avg_delay, group = origin),
geom_point)
ggplot(delays, aes(x = date, y = avg_delay, color = origin),
geom_line)
ggplot(delays, aes(x = date, y = avg_delay, color = origin)) +
geom_line()
ggplot(delays, aes(x = date, y = avg_delay, group = origin)) +
geom_line()
View(delays)
ewr_delays <- delays %>% filter(origin == "EWR")
jfk_delays <- delays %>% filter(origin == "JFK")
lga_delays <- delays %>% filter(origin == "LGA")
ggplot(ewr_delays, aes(x = date, y = avg_delay)) +
geom_histogram()
ggplot(ewr_delays, aes(y = avg_delay)) +
geom_histogram()
ggplot(ewr_delays, aes(x = avg_delay)) +
geom_histogram()
ggplot(jfk_delays, aes(x = avg_delay)) +
geom_histogram()
ggplot(lga_delays, aes(x = avg_delay)) +
geom_histogram()
